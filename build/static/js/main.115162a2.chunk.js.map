{"version":3,"sources":["utils/setAuthToken.js","actions/authActions.js","actions/types.js","reducers/authReducers.js","reducers/errorReducers.js","reducers/index.js","store.js","components/layout/Navbar.js","components/layout/Landing.js","components/auth/Register.js","components/auth/Login.js","components/private-route/PrivateRoute.js","components/dashboard/Dashboard.js","components/layout/Create.js","App.js","index.js"],"names":["setAuthToken","token","axios","defaults","headers","common","setCurrentUser","decoded","type","payload","logoutUser","dispatch","localStorage","removeItem","isEmpty","require","initialState","isAuthenticated","user","loading","combineReducers","auth","state","action","errors","middleware","thunk","store","createStore","rootReducer","compose","applyMiddleware","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","Navbar","className","to","style","fontWeight","width","borderRadius","letterSpacing","display","flexFlow","justifyContent","marginLeft","Component","Landing","height","Register","onChange","e","setState","target","id","value","onSubmit","preventDefault","newUser","name","email","password","password2","props","registerUser","history","this","push","nextProps","marginTop","marginBottom","paddingLeft","noValidate","error","classnames","invalid","htmlFor","connect","userData","post","then","res","catch","err","response","data","withRouter","Login","loginUser","componentDidMount","bind","componentWillReceiveProps","emailnotfound","passwordincorrect","setItem","jwt_decode","component","rest","render","Dashboard","onLogoutClick","split","fontFamily","onClick","CreatePost","post_event_name","post_event_description","post_event_date","post_max_members","post_open","post_duration","onChangeEventName","onChangeEventDescription","onChangeEventDate","onChangeOpenStatus","onChangeDuration","new_description","event","new_date","open_status","hack","description","date","duration","console","log","post_team_members","post_date","post_owner","classname","selected","checked","jwtToken","currentTime","Date","now","exp","location","href","App","exact","path","Create","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.115162a2.chunk.js","sourcesContent":["import axios from \"axios\";\r\nconst setAuthToken = token => {\r\n  if (token) {\r\n    // Apply authorization token to every request if logged in\r\n    axios.defaults.headers.common[\"Authorization\"] = token;\r\n  } else {\r\n    // Delete auth header\r\n    delete axios.defaults.headers.common[\"Authorization\"];\r\n  }\r\n};\r\nexport default setAuthToken;","import axios from \"axios\";\r\nimport setAuthToken from \"../utils/setAuthToken\";\r\nimport jwt_decode from \"jwt-decode\";\r\nimport {\r\n  GET_ERRORS, \r\n  SET_CURRENT_USER,\r\n  USER_LOADING\r\n} from \"./types\";\r\n// Register User\r\nexport const registerUser = (userData, history) => dispatch => {\r\n  axios\r\n    .post(\"/users/register\", userData)\r\n    .then(res => history.push(\"/login\")) // re-direct to login on successful register\r\n    .catch(err =>\r\n      dispatch({\r\n        type: GET_ERRORS,\r\n        payload: err.response.data\r\n      })\r\n    );\r\n};\r\n// Login - get user token\r\nexport const loginUser = userData => dispatch => {\r\n  axios\r\n    .post(\"/users/login\", userData)\r\n    .then(res => {\r\n      // Save to localStorage\r\n// Set token to localStorage\r\n      const { token } = res.data;\r\n      localStorage.setItem(\"jwtToken\", token);\r\n      // Set token to Auth header\r\n      setAuthToken(token);\r\n      // Decode token to get user data\r\n      const decoded = jwt_decode(token);\r\n      // Set current user\r\n      dispatch(setCurrentUser(decoded));\r\n    })\r\n    .catch(err =>\r\n      dispatch({\r\n        type: GET_ERRORS,\r\n        payload: err.response.data\r\n      })\r\n    );\r\n};\r\n// Set logged in user\r\nexport const setCurrentUser = decoded => {\r\n  return {\r\n    type: SET_CURRENT_USER,\r\n    payload: decoded\r\n  };\r\n};\r\n// User loading\r\nexport const setUserLoading = () => {\r\n  return {\r\n    type: USER_LOADING\r\n  };\r\n};\r\n// Log user out\r\nexport const logoutUser = () => dispatch => {\r\n  // Remove token from local storage\r\n  localStorage.removeItem(\"jwtToken\");\r\n  // Remove auth header for future requests\r\n  setAuthToken(false);\r\n  // Set current user to empty object {} which will set isAuthenticated to false\r\n  dispatch(setCurrentUser({}));\r\n};","export const GET_ERRORS = \"GET_ERRORS\";\r\nexport const USER_LOADING = \"USER_LOADING\";\r\nexport const SET_CURRENT_USER = \"SET_CURRENT_USER\";","import {\r\n    SET_CURRENT_USER,\r\n    USER_LOADING\r\n  } from \"../actions/types\";\r\n  const isEmpty = require(\"is-empty\");\r\n  const initialState = {\r\n    isAuthenticated: false,\r\n    user: {},\r\n    loading: false\r\n  };\r\n  export default function(state = initialState, action) {\r\n    switch (action.type) {\r\n      case SET_CURRENT_USER:\r\n        return {\r\n          ...state,\r\n          isAuthenticated: !isEmpty(action.payload),\r\n          user: action.payload\r\n        };\r\n      case USER_LOADING:\r\n        return {\r\n          ...state,\r\n          loading: true\r\n        };\r\n      default:\r\n        return state;\r\n    }\r\n  }","import { GET_ERRORS } from \"../actions/types\";\r\nconst initialState = {};\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case GET_ERRORS:\r\n      return action.payload;\r\n    default:\r\n      return state;\r\n  }\r\n}","import { combineReducers } from \"redux\";\r\nimport authReducers from \"./authReducers\";\r\nimport errorReducers from \"./errorReducers\";\r\nexport default combineReducers({\r\n  auth: authReducers,\r\n  errors: errorReducers\r\n});","import { createStore, applyMiddleware, compose } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport rootReducer from \"./reducers\";\r\n\r\nconst initialState = {};\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  initialState,\r\n  compose(\r\n    applyMiddleware(...middleware),\r\n    (window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ &&\r\n      window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__()) ||\r\n      compose\r\n  )\r\n);\r\n\r\nexport default store;","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nclass Navbar extends Component {\r\n  render() {\r\n    return (\r\n      <nav className=\"navbar navbar-inverse navbar-fixed-top navbar-expand-lg navbar-light bg-light\">\r\n            <div className=\"navbar-header\">\r\n                <Link to=\"/\" className=\"navbar-brand\">Find a Hackathon Group!</Link>\r\n            </div>\r\n            <div className=\"collapse navbar-collapse\">\r\n              <ul className=\"navbar navbar-nav\">\r\n                <li className=\"navbar-item\">\r\n                  <Link to=\"/\" className=\"listing-btns\">Listings</Link>\r\n                </li>\r\n                <li className=\"navbar-item\">\r\n                  <Link to=\"/create\" className=\"listing-btns\">Create Listing</Link>\r\n                </li>\r\n              </ul>\r\n            </div>\r\n            <Link\r\n                to=\"/register\"\r\n                style={{\r\n                  fontWeight: \"bold\",\r\n                  width: \"130px\",\r\n                  borderRadius: \"3px\",\r\n                  letterSpacing: \"1.5px\",\r\n                  display: \"flex\",\r\n                  flexFlow: \"column wrap\",\r\n                  justifyContent: \"center\"\r\n                }}\r\n                className=\"btn btn-large waves-effect waves-light hoverable white-text blue accent-2.5\"\r\n              >\r\n                Register\r\n            </Link>\r\n            <Link\r\n                to=\"/login\"\r\n                style={{\r\n                  fontWeight: \"bold\",\r\n                  width: \"130px\",\r\n                  borderRadius: \"3px\",\r\n                  letterSpacing: \"1.5px\",\r\n                  display: \"flex\",\r\n                  flexFlow: \"column wrap\",\r\n                  justifyContent: \"center\",\r\n                  marginLeft: \"0.5rem\"\r\n                }}\r\n                className=\"btn btn-large waves-effect hoverable white black-text\"\r\n              >\r\n                Log In\r\n            </Link>\r\n      </nav>\r\n    );\r\n  }\r\n}export default Navbar;","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";class Landing extends Component {\r\n  render() {\r\n    return (\r\n      <div style={{ height: \"75vh\" }} className=\"container valign-wrapper\">\r\n        <div className=\"row\">\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}export default Landing;","import React, { Component } from \"react\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { registerUser } from \"../../actions/authActions\";\r\nimport classnames from \"classnames\";\r\n\r\nclass Register extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      name: \"\",\r\n      email: \"\",\r\n      password: \"\",\r\n      password2: \"\",\r\n      errors: {}\r\n    }\r\n  }\r\n  componentDidMount() {\r\n    // If logged in and user navigates to Login page, should redirect them to dashboard\r\n    if (this.props.auth.isAuthenticated) {\r\n      this.props.history.push(\"/dashboard\");\r\n    }\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.errors) {\r\n      this.setState({\r\n        errors: nextProps.errors\r\n      });\r\n    }\r\n  }\r\n\r\n  onChange = e => {\r\n    this.setState({ [e.target.id]: e.target.value });\r\n  };\r\n  onSubmit = e => {\r\n    e.preventDefault();\r\n    \r\n    const newUser = {\r\n      name: this.state.name,\r\n      email: this.state.email,\r\n      password: this.state.password,\r\n      password2: this.state.password2\r\n    };\r\n    //console.log(newUser);\r\n    this.props.registerUser(newUser, this.props.history); \r\n    };\r\n  render() {\r\n    const { errors } = this.state;\r\n    \r\n    return (\r\n      <div className=\"container\">\r\n        <div style={{ marginTop: \"8rem\" }} className=\"row\">\r\n          <div className=\"col s8\">\r\n            <Link style={{ marginBottom: \"2rem\" }} to=\"/\" className=\"btn-flat waves-effect\">\r\n              <i className=\"material-icons left\">keyboard_backspace</i> Back to\r\n              home\r\n            </Link>\r\n            <div className=\"col s12\" style={{ paddingLeft: \"11.250px\" }}>\r\n              <h4>\r\n                <b>Register</b> below\r\n              </h4>\r\n              <p className=\"grey-text text-darken-1\">\r\n                Already have an account? <Link to=\"/login\">Log in</Link>\r\n              </p>\r\n            </div>\r\n            <form noValidate onSubmit={this.onSubmit}>\r\n              <div className=\"input-field col s12\">\r\n                <input\r\n                  onChange={this.onChange}\r\n                  value={this.state.name}\r\n                  error={errors.name}\r\n                  id=\"name\"\r\n                  type=\"text\"\r\n                  className={classnames(\"\", {\r\n                    invalid: errors.name\r\n                  })}\r\n\r\n                />\r\n                <label htmlFor=\"name\">Name</label>\r\n                <span className=\"red-text\">{errors.name}</span>\r\n              </div>\r\n              <div className=\"input-field col s12\">\r\n                <input\r\n                  onChange={this.onChange}\r\n                  value={this.state.email}\r\n                  error={errors.email}\r\n                  id=\"email\"\r\n                  type=\"email\"\r\n                  className={classnames(\"\", {\r\n                    invalid: errors.email\r\n                  })}\r\n                />\r\n                <label htmlFor=\"email\">Email</label>\r\n                <span className=\"red-text\">{errors.email}</span>\r\n              </div>\r\n              <div className=\"input-field col s12\">\r\n                <input\r\n                  onChange={this.onChange}\r\n                  value={this.state.password}\r\n                  error={errors.password}\r\n                  id=\"password\"\r\n                  type=\"password\"\r\n                  className={classnames(\"\", {\r\n                    invalid: errors.password\r\n                  })}\r\n                />\r\n                <label htmlFor=\"password\">Password</label>\r\n                <span className=\"red-text\">{errors.password}</span>\r\n              </div>\r\n              <div className=\"input-field col s12\">\r\n                <input\r\n                  onChange={this.onChange}\r\n                  value={this.state.password2}\r\n                  error={errors.password2}\r\n                  id=\"password2\"\r\n                  type=\"password\"\r\n                  className={classnames(\"\", {\r\n                    invalid: errors.password2\r\n                  })}\r\n                />\r\n                <label htmlFor=\"password2\">Confirm Password</label>\r\n                <span className=\"red-text\">{errors.password2}</span>\r\n              </div>\r\n              <div className=\"col s12\" style={{ paddingLeft: \"11.250px\" }}>\r\n                <button\r\n                  style={{\r\n                    width: \"150px\",\r\n                    borderRadius: \"3px\",\r\n                    letterSpacing: \"1.5px\",\r\n                    marginTop: \"1rem\"\r\n                  }}\r\n                  type=\"submit\"\r\n                  className=\"btn btn-large waves-effect waves-light hoverable blue accent-3\"\r\n                >\r\n                  Sign up\r\n                </button>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = state => ({\r\n  auth: state.auth,\r\n  errors: state.errors\r\n});\r\n\r\nRegister.propTypes = {\r\n  registerUser: PropTypes.func.isRequired,\r\n  auth: PropTypes.object.isRequired,\r\n  errors: PropTypes.object.isRequired\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { registerUser }\r\n)(withRouter(Register));","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { loginUser } from \"../../actions/authActions\";\r\nimport classnames from \"classnames\";\r\n\r\nclass Login extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      email: \"\",\r\n      password: \"\",\r\n      errors: {},\r\n    };\r\n    this.componentDidMount=this.componentDidMount.bind(this);\r\n    this.componentWillReceiveProps=this.componentWillReceiveProps.bind(this);\r\n    this.onChange=this.onChange.bind(this);\r\n    this.onSubmit=this.onSubmit.bind(this);\r\n  }\r\n  componentDidMount() {\r\n    // If logged in and user navigates to Login page, should redirect them to dashboard\r\n    if (this.props.auth.isAuthenticated) {\r\n      this.props.history.push(\"/dashboard\");\r\n    }\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.auth.isAuthenticated) {\r\n      this.props.history.push(\"/dashboard\"); // push user to dashboard when they login\r\n    }\r\nif (nextProps.errors) {\r\n      this.setState({\r\n        errors: nextProps.errors\r\n      });\r\n    }\r\n  }\r\n\r\n  onChange = e => {\r\n    this.setState({ [e.target.id]: e.target.value });\r\n  };\r\n  \r\n  onSubmit = e => {\r\n    e.preventDefault();\r\n    \r\n  const userData = {\r\n      email: this.state.email,\r\n      password: this.state.password\r\n    };\r\n    //console.log(userData);\r\n\r\n    this.props.loginUser(userData);\r\n  };\r\n  \r\n  render() {\r\n    const { errors } = this.state;\r\n    return (\r\n      <div className=\"container\">\r\n        <div style={{ marginTop: \"8rem\" }} className=\"row\">\r\n          <div className=\"col s8\">\r\n            <Link style={{ marginTop: \"8rem\" }} to=\"/\" className=\"btn-flat waves-effect\">\r\n              <i className=\"material-icons left\">keyboard_backspace</i> Back to\r\n              home\r\n            </Link>\r\n            <div className=\"col s12\" style={{ paddingLeft: \"11.250px\" }}>\r\n              <h4>\r\n                <b>Login</b> below\r\n              </h4>\r\n              <p className=\"grey-text text-darken-1\">\r\n                Don't have an account? <Link to=\"/register\">Register</Link>\r\n              </p>\r\n            </div>\r\n            <form noValidate onSubmit={this.onSubmit}>\r\n              <div className=\"input-field col s12\">\r\n                <input\r\n                  onChange={this.onChange}\r\n                  value={this.state.email}\r\n                  error={errors.email}\r\n                  id=\"email\"\r\n                  type=\"email\"\r\n                  className={classnames(\"\", {\r\n                    invalid: errors.email || errors.emailnotfound\r\n                  })}\r\n                />\r\n                <label htmlFor=\"email\">Email</label>\r\n                <span className=\"red-text\">\r\n                  {errors.email}\r\n                  {errors.emailnotfound}\r\n                </span>\r\n              </div>\r\n              <div className=\"input-field col s12\">\r\n                <input\r\n                  onChange={this.onChange}\r\n                  value={this.state.password}\r\n                  error={errors.password}\r\n                  id=\"password\"\r\n                  type=\"password\"\r\n                  className={classnames(\"\", {\r\n                    invalid: errors.password || errors.passwordincorrect\r\n                  })}\r\n                />\r\n                <label htmlFor=\"password\">Password</label>\r\n                <span className=\"red-text\">\r\n                  {errors.password}\r\n                  {errors.passwordincorrect}\r\n                </span>\r\n              </div>\r\n              <div className=\"col s12\" style={{ paddingLeft: \"11.250px\" }}>\r\n                <button\r\n                  style={{\r\n                    width: \"150px\",\r\n                    borderRadius: \"3px\",\r\n                    letterSpacing: \"1.5px\",\r\n                    marginTop: \"1rem\"\r\n                  }}\r\n                  type=\"submit\"\r\n                  className=\"btn btn-large waves-effect waves-light hoverable blue accent-3\"\r\n                >\r\n                  Login\r\n                </button>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nLogin.propTypes = {\r\n  loginUser: PropTypes.func.isRequired,\r\n  auth: PropTypes.object.isRequired,\r\n  errors: PropTypes.object.isRequired\r\n};\r\nconst mapStateToProps = state => ({\r\n  auth: state.auth,\r\n  errors: state.errors\r\n});\r\nexport default connect(\r\n  mapStateToProps,\r\n  { loginUser }\r\n)(Login);","import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nconst PrivateRoute = ({ component: Component, auth, ...rest }) => (\r\n  <Route\r\n    {...rest}\r\n    render={props =>\r\n      auth.isAuthenticated === true ? (\r\n        <Component {...props} />\r\n      ) : (\r\n        <Redirect to=\"/login\" />\r\n      )\r\n    }\r\n  />\r\n);\r\nPrivateRoute.propTypes = {\r\n  auth: PropTypes.object.isRequired\r\n};\r\nconst mapStateToProps = state => ({\r\n  auth: state.auth\r\n});\r\nexport default connect(mapStateToProps)(PrivateRoute);\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { logoutUser } from \"../../actions/authActions\";\r\n\r\nclass Dashboard extends Component {\r\n  onLogoutClick = e => {\r\n    e.preventDefault();\r\n    this.props.logoutUser();\r\n  };\r\nrender() {\r\n    const { user } = this.props.auth;\r\nreturn (\r\n      <div style={{ height: \"75vh\" }} className=\"dashbrd valign-wrapper\">\r\n        <div className=\"row\">\r\n          <div className=\"col s12 center-align\">\r\n            <h4>\r\n              <b>Hey there,</b> {user.name.split(\" \")[0]}\r\n              <p className=\"flow-text grey-text text-darken-1\">\r\n                You are logged into {\" \"}\r\n                <span style={{ fontFamily: \"monospace\" }}>Hacker Friends</span> app 👏\r\n              </p>\r\n            </h4>\r\n            <button\r\n              style={{\r\n                width: \"150px\",\r\n                borderRadius: \"3px\",\r\n                letterSpacing: \"1.5px\",\r\n                marginTop: \"1rem\"\r\n              }}\r\n              onClick={this.onLogoutClick}\r\n              className=\"btn btn-large waves-effect waves-light hoverable blue accent-3\"\r\n            >\r\n              Logout\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nDashboard.propTypes = {\r\n  logoutUser: PropTypes.func.isRequired,\r\n  auth: PropTypes.object.isRequired\r\n};\r\nconst mapStateToProps = state => ({\r\n  auth: state.auth\r\n});\r\nexport default connect(\r\n  mapStateToProps,\r\n  { logoutUser }\r\n)(Dashboard);","import React, { Component } from 'react';\r\nimport axios from \"axios\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\n\r\nexport default class CreatePost extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            post_event_name:'',\r\n            post_event_description: '',\r\n            post_event_date: '',\r\n     //       post_team_members: [],\r\n            post_max_members: '',\r\n      //      post_owner: '',    we don't need it because Backend will automatically create that\r\n           // post_date: '',    we don't need it because Backend will automatically create that\r\n            post_open: '',\r\n            post_duration: ''\r\n        }\r\n        this.onChangeEventName=this.onChangeEventName.bind(this);\r\n        this.onChangeEventDescription = this.onChangeEventDescription.bind(this);\r\n        this.onChangeEventDate = this.onChangeEventDate.bind(this);\r\n    //    this.onAddMember = this.onAddMember.bind(this);\r\n        this.onChangeOpenStatus = this.onChangeOpenStatus.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n        this.onChangeDuration = this.onChangeDuration.bind(this);\r\n    }\r\n\r\n    onChangeEventDescription(new_description) { // these are events, titled with 'onEvent' as in, they occur when the event occurs\r\n        this.setState({\r\n            post_event_description: new_description.target.value\r\n        });\r\n    }\r\n\r\n    onChangeEventDescription(event) { //This is for changing the name of event\r\n        this.setState({\r\n            post_event_name: event.target.value\r\n        });\r\n    }\r\n\r\n    onChangeEventDate(new_date) { // these are basically setters\r\n        this.setState({\r\n            post_event_date: new_date\r\n        });\r\n    }\r\n   // Akash changed this out this\r\n    onChangeDuration(e) { // these are basically setters\r\n        this.setState({\r\n            post_duration: e.target.value\r\n        });\r\n    }\r\n/* Akash commented out\r\n    onAddMember(new_member, status) {\r\n        this.setState({\r\n            post_team_members: new_member.target.value\r\n        });\r\n    }*/\r\n    \r\n    onChangeOpenStatus(open_status) {\r\n        this.setState({\r\n            post_open: open_status.target.value\r\n        });\r\n    }\r\n\r\n    onSubmit(event) {\r\n        event.preventDefault(); // prevent default HTML code\r\n        const hack={\r\n            name:this.state.post_event_name,\r\n            description:this.state.post_event_description,\r\n            date:this.state.post_event_date,\r\n            duration:this.state.duration,\r\n        }\r\n        axios.post(\"/hacks/add\",{ hack })\r\n        .then( res=>{\r\n            console.log(res.data);\r\n            console.log(res);\r\n        })\r\n        .catch(err=>console.log(err));\r\n\r\n        console.log(`Post submitted:`);\r\n        console.log(`Post Description: ${this.state.post_event_description}`);\r\n        console.log(`Event Date: ${this.state.post_event_date}`);\r\n        console.log(`Group Members: ${this.state.post_team_members}`);\r\n        console.log(`Posted: ${this.state.post_date}`);\r\n        console.log(`Availability: ${this.state.post_open}`);\r\n\r\n        this.setState({\r\n            post_event_description: '',\r\n            post_event_date: '',\r\n          //  post_team_members: [],\r\n            post_max_members: '',\r\n            post_owner: '',\r\n          //  post_date: '',\r\n            post_open: ''\r\n\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div style = {{marginTop:15}}>\r\n                    <h3>Create New Post</h3>\r\n                    <form onSubmit={this.onSubmit}>\r\n\r\n                        <div className=\"form-group\">\r\n                            <label>Event Name: </label>\r\n                            <input type=\"text\"\r\n                                classname=\"form-control\" name=\"date\"\r\n                                value={this.state.post_event_name}\r\n                                onChange={this.onChangeEventName}\r\n                                />\r\n                        </div>\r\n                                                \r\n                        <div className=\"form-group\">\r\n                            <label>Event Date: </label>\r\n                            <div>\r\n                                <DatePicker \r\n                                selected={this.state.post_event_date}\r\n                                onChange={this.onChangeEventDate}/>\r\n                            </div>\r\n                        </div>\r\n\r\n                        \r\n                        <div className=\"form-group\">\r\n                                <label>Description: </label>\r\n                                <input type=\"text\" name=\"description\"\r\n                                    className=\"form-control\"\r\n                                    value={this.state.post_event_description}\r\n                                    onChange={this.onChangeEventDescription}\r\n                                    />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                                <label>Duration: </label>\r\n                                <input type=\"text\" name=\"duration\"\r\n                                    className=\"form-control\"\r\n                                    value={this.state.post_duration}\r\n                                    onChange={this.onChangeDuration}\r\n                                    />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <div className=\"form-check form-check-inline\">\r\n                                <input className=\"form-check-input\"\r\n                                    type=\"radio\"\r\n                                    name=\"openOptions\"\r\n                                    id=\"openClosed\"\r\n                                    value=\"Closed\"\r\n                                    checked={this.state.post_open === 'Closed'}\r\n                                    onChange={this.onChangeOpenStatus}\r\n                                    />\r\n                             <label className=\"form-check-label\">Closed</label>\r\n                            </div>\r\n                            <div className=\"form-check form-check-inline\">\r\n                                <input className=\"form-check-input\"\r\n                                    type=\"radio\"\r\n                                    name=\"openOptions\"\r\n                                    id=\"openOpen\"\r\n                                    value=\"Open\"\r\n                                    checked={this.state.post_open === 'Open'}\r\n                                    onChange={this.onChangeOpenStatus}\r\n                                    />\r\n                                <label className=\"form-check-label\">Open</label>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input type=\"submit\" value=\"Create Post\" className=\"btn btn-primary\" />\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}","import React, { Component } from \"react\";\r\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport jwt_decode from \"jwt-decode\";\r\nimport setAuthToken from \"./utils/setAuthToken\";\r\n\r\nimport { setCurrentUser, logoutUser } from \"./actions/authActions\";\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"./store\";\r\n\r\nimport Navbar from \"./components/layout/Navbar\";\r\nimport Landing from \"./components/layout/Landing\";\r\nimport Register from \"./components/auth/Register\";\r\nimport Login from \"./components/auth/Login\";\r\nimport PrivateRoute from \"./components/private-route/PrivateRoute\";\r\nimport Dashboard from \"./components/dashboard/Dashboard\";\r\nimport Create from \"./components/layout/Create\";\r\n\r\nimport \"./App.css\";\r\n\r\n// Check for token to keep user logged in\r\nif (localStorage.jwtToken) {\r\n  // Set auth token header auth\r\n  const token = localStorage.jwtToken;\r\n  setAuthToken(token);\r\n  // Decode token and get user info and exp\r\n  const decoded = jwt_decode(token);\r\n  // Set user and isAuthenticated\r\n  store.dispatch(setCurrentUser(decoded));\r\n// Check for expired token\r\n  const currentTime = Date.now() / 1000; // to get in milliseconds\r\n  if (decoded.exp < currentTime) {\r\n    // Logout user\r\n    store.dispatch(logoutUser());\r\n    // Redirect to login\r\n    window.location.href = \"./login\";\r\n  }\r\n}\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <Provider store={store}>\r\n        <Router>\r\n          <div className=\"App\">\r\n            <Navbar />\r\n            <Route exact path=\"/\" component={Landing} />\r\n            <Route exact path=\"/create\" component={Create} />\r\n            <Route exact path=\"/register\" component={Register} />\r\n            <Route exact path=\"/login\" component={Login} />\r\n            <Switch>\r\n              <PrivateRoute exact path=\"/dashboard\" component={Dashboard} />\r\n            </Switch>\r\n          </div>\r\n        </Router>\r\n      </Provider>\r\n    );\r\n  }\r\n}\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\nimport './index.css';\r\nimport App from './App';\r\n//import * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n    <App />,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\n//serviceWorker.unregister();\r\n"],"sourceRoot":""}